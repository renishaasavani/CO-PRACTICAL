4. Write a c program to take two unsigned decimal numbers, convert them in binary numbers and perform all bit operations like and, or, xor, xnor and complement.


#include <stdio.h>
#include <math.h>
long long convertDecimalToBinary(int n);
int main()
{
    unsigned  int a,b,c,d,e,q,r;
    printf("Enter a 1st decimal number: ");
    scanf("%d", &a);
    printf("%d in decimal = %d in binary", a, convertDecimalToBinary(a));
    printf("\n Enter a 2nd decimal number: ");
    scanf("%d", &b);
    printf("%d in decimal = %d in binary", b, convertDecimalToBinary(b));
c=(a&b) ;
    printf("\n AND  Output = %d",convertDecimalToBinary(c));
 d=(a|b);
    printf("\n OR Output = %d",convertDecimalToBinary(d));
e=(a^b) ;
    printf("\n  XOR Output = %d", convertDecimalToBinary(e));
printf("\n  XNOR Output = %d", (~e));
     printf("\n  XOR Output = %d", convertDecimalToBinary(~e));
q=~a;
    printf("\n  complement 1st Output = %d", (q));
r=~b;
    printf("\n  complement  2nd Output = %d", (r));
return 0;
}
long long convertDecimalToBinary(int n)
{
    long long binaryNumber = 0;
    int remainder, i = 1, step = 1;

    while (n!=0)
    {
        remainder = n%2;
        n /= 2;
        binaryNumber += remainder*i;
        i *= 10;
    }
    return binaryNumber;
}
